#!/usr/bin/env python
from __future__ import print_function
import boto3
import json
import boto3.session
import urllib2
import os
import sys
import time

if len(sys.argv) > 1:
    queue_name = sys.argv[1]
else:
    print("Usage: %s queue-name" % (sys.argv[0],), file=sys.stderr)
    sys.exit(1)

if len(sys.argv) > 2:
    instance_id = sys.argv[2]
else:
    instance_id = urllib2.urlopen('http://169.254.169.254/latest/meta-data/instance-id').read()

s = boto3.session.Session()
region = s._session.get_config_variable('region')
if region is None:
    az = urllib2.urlopen('http://169.254.169.254/latest/meta-data/placement/availability-zone').read()
    region = az[:-1]

client = boto3.client('sqs', region_name=region)
url = client.get_queue_url(QueueName='livegrep-asg')['QueueUrl']

body = None
while True:
    m = client.receive_message(
        QueueUrl=url,
        WaitTimeSeconds=20
    )
    if 'Messages' not in m:
        print("No messages in queue!", file=sys.stderr)
        time.sleep(20)
        continue

    msg = m['Messages'][0]
    body = json.loads(msg['Body'])
    print("considering event: %r" % (msg['Body'],), file=sys.stderr)
    if body.get('Event', None) == 'autoscaling:TEST_NOTIFICATION':
        client.delete_message(
            QueueUrl=url,
            ReceiptHandle=msg['ReceiptHandle'])
        continue

    if body.get('EC2InstanceId', None) == instance_id:
        break
    else:
        client.change_message_visibility(
            QueueUrl=url,
            ReceiptHandle=msg['ReceiptHandle'],
            VisibilityTimeout=10)

# do the thing with `body`
client.delete_message(
    QueueUrl=url,
    ReceiptHandle=msg['ReceiptHandle'])
print(msg['Body'])
